name: Sync Fork with Upstream

on:
  schedule:
    - cron: '0 3 * * *'  # Runs every day at 3 AM UTC
  workflow_dispatch:     # Allows manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the fork
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Add upstream remote
        run: git remote add upstream https://github.com/eclipse-tractusx/sldt-semantic-models.git

      - name: Fetch upstream changes
        run: git fetch upstream

      - name: Merge upstream/main into fork/main
        run: |
          git merge upstream/main --no-edit || true

      - name: Simulate changes for testing
        run: |
          echo "Test change $(date)" > test-change.txt
          git add test-change.txt
          git commit -m "test: simulate changes for notification testing" || true

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_ENV
            echo "Changes detected in repository"
          else
            echo "changes=false" >> $GITHUB_ENV
            echo "No changes detected"
          fi

      - name: Create notification on changes or failure
        if: failure() || env.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const message = process.env.GITHUB_JOB_STATUS === 'failure' 
              ? 'Workflow failed during sync'
              : 'Changes detected during sync';
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Sync Notification: ${message}`,
              body: `Workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}\nStatus: ${process.env.GITHUB_JOB_STATUS}\nChanges detected: ${process.env.changes}`
            });
